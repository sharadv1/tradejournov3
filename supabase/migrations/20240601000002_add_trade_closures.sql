-- Create trade_closures table for partial closures\nCREATE TABLE IF NOT EXISTS trade_closures (\n  id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),\n  trade_id UUID REFERENCES trades(id) ON DELETE CASCADE,\n  close_date DATE NOT NULL,\n  close_time TIME NOT NULL,\n  close_price DECIMAL NOT NULL,\n  closed_position_size DECIMAL NOT NULL,\n  notes TEXT,\n  created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),\n  updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()\n);\n\n-- Add new fields to trades table\nALTER TABLE trades ADD COLUMN IF NOT EXISTS is_fully_closed BOOLEAN DEFAULT FALSE;\nALTER TABLE trades ADD COLUMN IF NOT EXISTS original_position_size DECIMAL;\nALTER TABLE trades ADD COLUMN IF NOT EXISTS remaining_position_size DECIMAL;\nALTER TABLE trades ADD COLUMN IF NOT EXISTS average_exit_price DECIMAL;\n\n-- Enable row-level security\nALTER TABLE trade_closures ENABLE ROW LEVEL SECURITY;\n\n-- Create policies\nCREATE POLICY "Users can view their own trade closures"\n  ON trade_closures FOR SELECT\n  USING (EXISTS (\n    SELECT 1 FROM trades\n    WHERE trades.id = trade_closures.trade_id\n    AND trades.user_id = auth.uid()\n  ));\n\nCREATE POLICY "Users can insert their own trade closures"\n  ON trade_closures FOR INSERT\n  WITH CHECK (EXISTS (\n    SELECT 1 FROM trades\n    WHERE trades.id = trade_closures.trade_id\n    AND trades.user_id = auth.uid()\n  ));\n\nCREATE POLICY "Users can update their own trade closures"\n  ON trade_closures FOR UPDATE\n  USING (EXISTS (\n    SELECT 1 FROM trades\n    WHERE trades.id = trade_closures.trade_id\n    AND trades.user_id = auth.uid()\n  ));\n\nCREATE POLICY "Users can delete their own trade closures"\n  ON trade_closures FOR DELETE\n  USING (EXISTS (\n    SELECT 1 FROM trades\n    WHERE trades.id = trade_closures.trade_id\n    AND trades.user_id = auth.uid()\n  ));\n\n-- Enable realtime for trade_closures\nALTER PUBLICATION supabase_realtime ADD TABLE trade_closures;
